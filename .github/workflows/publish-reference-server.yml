name: Publish Reference Server

# Publishes Docker image to GitHub Container Registry on releases
# Provides explicit "go" button via GitHub releases
# Extracts version from git tag for immutable provenance

on:
  release:
    types: [published]

jobs:
  # Run tests first to ensure quality
  test:
    name: Pre-publish Tests
    uses: ./.github/workflows/test-reference-server.yml

  publish-docker:
    name: Publish Docker Image
    needs: test
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          # Validate that the tag looks like a version (v1.0.0 or 1.0.0)
          if [[ ! $VERSION =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?(\+[a-zA-Z0-9.-]+)?$ ]]; then
            echo "Error: Tag '$VERSION' is not a valid semantic version"
            exit 1
          fi
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/reference-server
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.extract_version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.extract_version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.extract_version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./reference-server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}/reference-server:${{ steps.extract_version.outputs.version }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json
